import nodemailer from 'nodemailer';

export async function POST(req) {
  try {
    const { user, cart, deliveryMethod, deliveryAddress, total } = await req.json();

    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      }
    });

    const itemsList = cart.map(item => {
    const quantity = item.quantity ?? 1;
    const price = Number(item.price) || 0;
    const total = quantity * price;
    return `‚Ä¢ ${item.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} ‚Äî ${quantity} —à—Ç √ó ${price} ‚ÇΩ = ${total} ‚ÇΩ`;
    }).join('\n');

    const message = `
      –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —á–µ–∫ "–ú–µ—Ç—Ä"

      üìß Email: ${user.email}
      üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}

      üì¶ –°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è: ${deliveryMethod}
      ${deliveryMethod === '–î–æ—Å—Ç–∞–≤–∫–∞' ? `üè† –ê–¥—Ä–µ—Å: ${deliveryAddress}` : ''}

      üõí –¢–æ–≤–∞—Ä—ã:
      ${itemsList}

      üí∞ –ò—Ç–æ–≥–æ: ${total} ‚ÇΩ

      –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É vladborsch9000@gmail.com
    `;

    await transporter.sendMail({
        from: process.env.EMAIL_USER,
        to: 'vladborsch9000@gmail.com',
        subject: '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —Å–∞–π—Ç–∞',
        text: message,
    });

    await transporter.sendMail({
        from: process.env.EMAIL_USER,
        to: user.email,
        subject: '–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!',
        text: `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑. –í–æ—Ç –µ–≥–æ –¥–µ—Ç–∞–ª–∏:\n\n${message}`,
    });

    return new Response(JSON.stringify({ success: true }), { status: 200 });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', error);
    return new Response(JSON.stringify({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email' }), { status: 500 });
  }
}
