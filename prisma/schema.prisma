datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  password String
  phone    String?
  role     Role    @default(USER)
  orders   Order[]
}

model Category {
  id            String         @id @default(uuid())
  name          String
  image         String?
  subcategories Subcategory[]
  products      Product[]
}

model Subcategory {
  id         String   @id @default(uuid())
  name       String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  products   Product[]
}

model Product {
  id            String   @id @default(uuid())
  name          String
  description   String
  sku           String   @unique
  price         Float
  category      Category?   @relation(fields: [categoryId], references: [id])
  categoryId    String?
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  subcategoryId String?
  createdAt     DateTime @default(now())
  orderItems    OrderItem[]
  image         String?
}

model Order {
  id               String   @id @default(uuid())
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  items            OrderItem[]
  status           OrderStatus @default(Проверяется)
  deliveryMethod   DeliveryMethod
  deliveryAddress  String?
  createdAt        DateTime @default(now())
}

model OrderItem {
  id        String  @id @default(uuid())
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  quantity  Int     @default(1)
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  Проверяется
  Собирается
  Отправлено
  Доставлено
  Выдача
  Отменено
  Завершено
}

enum DeliveryMethod {
  Самовывоз
  Доставка
}
